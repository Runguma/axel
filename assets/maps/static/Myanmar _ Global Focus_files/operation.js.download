/** Global variables */
var gTabId = 0;
var gTabLoaded = [false, false, false, false];

/**
 * Gets pillar description
 * @param string pillar pillar name
 * @return string pillar description
 */
function get_pillar_descr(pillar) {
    var descr = pillar;
    if (pillar==='PILLAR 1') {
        descr = 'Pillar 1 Refugee programme';
    }
    else if (pillar==='PILLAR 2') {
        descr = 'Pillar 2 Stateless programme';
    }
    else if (pillar==='PILLAR 3') {
        descr = 'Pillar 3 Reintegration projects';
    }
    else if (pillar==='PILLAR 4') {
        descr = 'Pillar 4 IDP projects';
    }
    return descr;
}

/**
 * Show the operational budget and expenditures chart
 */
function show_opbudgexp_chart() {
    var jchart = jQuery('#opbudgexp-chart-info').text(),
        chartInfo = JSON.parse(jchart), 
        opInfo = (chartInfo.length && (chartInfo.length>0)) ? chartInfo[0] : [],
        cats = ['PILLAR 1', 'PILLAR 2', 'PILLAR 3', 'PILLAR 4'] ,
        budgs = [], exps = [], cat = null, row = null;
	var isExp = true;
	if (parseInt(opInfo['PILLAR 1'].expenditure)==0) isExp = false;
    for(var i=0; i<4; i++) {
        cat = cats[i];
        if (opInfo.hasOwnProperty(cat)) {
            budgs[i] = parseInt(opInfo[cat].budget)/1000000;
            exps[i] = parseInt(opInfo[cat].expenditure)/1000000;
        }
        else {
            budgs[i] = null;
            exps[i] = null;
        }
    }
    jQuery('#opbudgexp-chart').empty().highcharts({
        chart: { type: 'column', backgroundColor: 'transparent', style: { fontFamily: '"Lato", arial'} },
        title: { text: '' },
        credits: { enabled: false },
        colors: [ '#add397', '#80bde1', '#7cb5ec', '#ecd87c', '#b87b6d', '#c476c9', '#639ba7', '#336595', '#444348', '#cecece' ],
        exporting: { buttons: { contextButton: { enabled: false } } },
        legend: { borderRadius: 0, borderWidth: 0 },
        xAxis: {
            categories: cats,
            tickmarkPlacement: 'on',
            title: { enabled: false }
        },
        yAxis: {
            title: { text: 'Millions (USD)' }
        },
        tooltip: {
                formatter: function () {
                    var name = get_pillar_descr(this.x),
                        y = this.y;
                    return '<b>'+name+'</b><br/>'+
                        this.series.name+': USD '+Highcharts.numberFormat(y, 0, '.')+' millions<br/>';
                }
            },
        plotOptions: {
            area: {
                stacking: null,
                lineColor: '#666666',
                lineWidth: 1,
                marker: {
                    lineWidth: 1,
                    lineColor: '#666666'
                }
            }
        },
        series: [{
            name: 'Budget',
            data: budgs
        }, {
			showInLegend: isExp, 
            name: 'Expenditure',
            data: exps
        }]
    });
}

/**
 * Show the types of population chars
 */
 function show_poptypes_chart() {
    var jchart = jQuery('#poptypes-chart-info').text(),
        chartInfo = JSON.parse(jchart);
	var pocColors = chartInfo.map(function(d) { 
			switch(d[0]) {
				case 'Refugees': 
				case 'Réfugiés': 
					return '#0072BC';
				case 'Asylum-seekers': 
				case 'Demandeurs d’asile': 
					return '#BFDCEE';
				case 'IDPs': 
				case 'Déplacés internes': 
					return '#7FB8DD';
				case 'Returned refugees':
				case 'Returned IDPs':
				case 'Réfugiés rapatriés':
				case 'Déplacés internes de retour':
					return '#BFBFBF';
				case 'Stateless': 
				case 'Apatrides': 
					return '#FAEB00';
				case 'Others of concern': 
				case 'Autres': 
					return '#18375F';
				default: 
					return '#eeeeee';
			}
		}); 
			
    jQuery('#poptypes-chart').empty().highcharts({
        chart: { type: 'pie', backgroundColor: 'transparent', style: { fontFamily: '"Lato", arial'}},
        title: { text: '', style: { fontSize: '12px' }, align: 'center', verticalAlign: 'middle', y: -10 },
        credits: { enabled: false },
        colors: pocColors,
        legend: { borderRadius: 0, borderWidth: 0 },
        exporting: { buttons: { contextButton: { enabled: false } } },
        plotOptions: { pie: { dataLabels: { enabled: true,formatter: function () {
                        var name = this.point.name,
                            y = this.point.y;
                        return '<b>'+name+'</b><br/>'+
                            Highcharts.numberFormat(y, 0, '.');
                    } }, showInLegend: true } },
        tooltip: {
                    formatter: function () {
                        var name = this.point.name,
                            y = this.point.y;
                        return '<b>'+name+'</b><br/>'+
                            'POC: '+Highcharts.numberFormat(y, 0, '.');
                    }
                },
        series: [{ data: chartInfo }]
    });
}

/**
 * Show the budget or expenditure by pillar trend chart
 */
function show_subregion_budget_expenditure_bypillar_trend_chart(budgExpType) {
	var lang = jQuery('#language').text();
    if (budgExpType==='budget') {
        jQuery('#budgexp-title-prefix').html( (lang == 'fr') ? 'Budgets - ' : 'Budgets for');
    }
    else {
        jQuery('#budgexp-title-prefix').html((lang == 'fr') ? 'Dépenses - ' : 'Expenditure for');
    }
    var jchart = jQuery('#subregion-'+budgExpType+'-chart-info').text(),
         chartInfo = JSON.parse(jchart),
         cats = chartInfo.categories,
         p1 = chartInfo.p1,
         p2 = chartInfo.p2,
         p3 = chartInfo.p3,
         p4 = chartInfo.p4,
		latestClosedYear = jQuery('#subregion-trend-chart-latest-closed-year').text();
    jQuery('#subregion-trend-chart').empty().highcharts({
		
        chart: { type: 'column', backgroundColor: 'transparent', style: { fontFamily: '"Lato", arial',  fontSize: '24px'} },
        title: { text: '' },
        credits: { enabled: false },
        colors: [ '#AED299','#C49BC4','#FDBF2C','#5E9CD3'],
        exporting: { buttons: { contextButton: { enabled: false } } },
        legend: { borderRadius: 0, borderWidth: 0, reversed: true },
        xAxis: { 
            categories: cats,
            labels: {
                formatter: function() {
					var year = this.value;
                    return (year<=latestClosedYear) ? year : year+"*";
                }
            }
        },
        yAxis: {
            min: 0,
            title: { text: 'Millions (USD)' },
            stackLabels: {
                enabled: false,
                style: {
                    fontWeight: 'bold',
                    color: (Highcharts.theme && Highcharts.theme.textColor) || '#444348'
                },
                formatter: function () {
                    return Highcharts.numberFormat(this.total, 0);
                }
            }
        },
        tooltip: {
            formatter: function () {
                var x = this.x,
                    y = this.y,
                    t = this.point.stackTotal,
					precisionY = y < 1 ? 1 : 0;
					precisionT = t < 1 ? 1 : 0;
                return '<b>'+x+'</b><br/>'+
                    this.series.name+': USD '+Highcharts.numberFormat(y, precisionY, '.')+' million<br/>'+
                    'Total: USD '+Highcharts.numberFormat(t, precisionT, '.')+' million';
            }
        },
        plotOptions: {
            column: {
                stacking: 'normal',
                dataLabels: { enabled: false }
            }
        },
        series: [{
            name: 'PILLAR 4',
            data: p4
        }, {
            name: 'PILLAR 3',
            data: p3
        }, {
            name: 'PILLAR 2',
            data: p2
        }, {
            name: 'PILLAR 1',
            data: p1
        }]
    });
    jQuery('#subtrend-back').show().click(show_subregion_budget_expenditure_trend_chart);
}

/**
 * Show the budget and expenditure trend chart
 */
function show_subregion_budget_expenditure_trend_chart() {
	var lang = jQuery('#language').text();

    jQuery('#budgexp-title-prefix').html( (lang == 'fr') ? 'Budgets et Dépenses -' : 'Budgets and Expenditure for');
    var jchart = jQuery('#subregion-trend-chart-info').text(),
        chartInfo = JSON.parse(jchart),
        cats = chartInfo.categories,
        budgs = chartInfo.budget,
        exps = chartInfo.expenditure,
		latestClosedYear = jQuery('#subregion-trend-chart-latest-closed-year').text();
		
	var yearsWithBudget = 0;
	for (var i = 0; i < budgs.length; i++) {
		if (budgs[i] > 0) yearsWithBudget++;
	}

	if(yearsWithBudget <= 1) {
		// budget available for one year only, do not display a single dot on the chart but the detailed budget bar chart instead
		return show_subregion_budget_expenditure_bypillar_trend_chart('budget');
	}
	
    jQuery('#subregion-trend-chart').empty().highcharts({
        chart: { type: 'line', backgroundColor: 'transparent', style: { fontFamily: '"Lato", arial'}},
        title: { text: '' },
		subtitle: { align: 'center',text: 'Breakdown by pillar is available by clicking on budget/expenditure trend lines'},
        credits: { enabled: false },
        colors: [ '#4F7BC4', '#A9CF8D' ],
        exporting: { buttons: { contextButton: { enabled: false } } },
        legend: { borderRadius: 0, borderWidth: 0 },
        xAxis: { 
            categories: cats,
            labels: {
                formatter: function() {
					var year = this.value;
                    return (year<=latestClosedYear) ? year : year+"*";
                }
            }
        },
        yAxis: { title: { text: 'Millions (USD)' } },
        tooltip: {
                formatter: function () {
                    var x = this.x,
                        y = this.y;
                    return '<b>'+x+'</b><br/>'+
                        this.series.name+': USD '+Highcharts.numberFormat(y, 0, '.')+' million';
                }
            },
        plotOptions: {
            series: {
                cursor: 'pointer',
                point: {
                    events: {
                        click: function () {
                            var sname =  (this.series.index == 0) ? "budget" : "expenditure";
                            show_subregion_budget_expenditure_bypillar_trend_chart(sname);
                        }
                    }
                }
            }
        },
        series: [{
			index: 0,
            name: 'Budget',
            data: budgs
        }, {
            index: 1,
			name: (lang == 'fr') ? 'Dépenses' : 'Expenditure',
            data: exps
        }]
    });
    jQuery('#subtrend-back').hide();
}

function build_location_map(Map, FeatureLayer, Legend, parser, ArcGISTiledMapServiceLayer, 
		TextSymbol,	LabelLayer,	SimpleRenderer,	SimpleMarkerSymbol,	SimpleLineSymbol,
		UniqueValueRenderer,Popup, PopupTemplate,domConstruct,domClass) {
    parser.parse();
    var jmapInfo = jQuery('#location-map-info').text(),
        mapInfo = JSON.parse(jmapInfo);
    var long = mapInfo.longitude,
        lat = mapInfo.latitude,
        zoomLevel = (mapInfo.zoom_level>0) ? mapInfo.zoom_level : 6;
		
	var popup = new Popup({
            titleInBody: false,
			highlight: false
        }, domConstruct.create("div"));
		domClass.add(popup.domNode, "light");
	
		
    locationMap = new Map("location-map", {
            center: [long, lat],
            zoom: zoomLevel,
            smartNavigation: false,
            isScrollWheelZoom: false,
            isRubberBandZoom: false,
            logo: false,
			infoWindow: popup
        });
		

		
		var template = new PopupTemplate({
          title: "{name}",
          description: "Location Type: {loc_type}<br/>{iso3}"
        });
		var labelField = "terr_name"; 
		var defaultSymbol = new SimpleLineSymbol(SimpleLineSymbol.STYLE_DASHDOT,new esri.Color([0,0,0]),1);

//create renderer
          var renderer = new UniqueValueRenderer(defaultSymbol, "cartography");
renderer.addValue("International boundary line", new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID,new esri.Color([127,127,127]),1.5));


		
    var reliefLayer = new ArcGISTiledMapServiceLayer("http://services.arcgisonline.com/arcgis/rest/services/World_Shaded_Relief/MapServer",       { opacity:.5	}),
        unhcrLayer = new FeatureLayer("https://geoservice.unhcr.org/arcgis/rest/services/wrl_services/wrl_marker_office_p_unhcr/FeatureServer/0", {
          mode: FeatureLayer.MODE_ONDEMAND,
          infoTemplate:template,
          outFields: ["*"]
        }),
        pocLayer = new FeatureLayer("https://geoservice.unhcr.org/arcgis/rest/services/wrl_services/wrl_ppl_poc_p_unhcr/FeatureServer/0", {
          mode: FeatureLayer.MODE_ONDEMAND,
          infoTemplate:template,
          outFields: ["*"]
        }),
		borderLayer = new FeatureLayer("https://geoservice.unhcr.org/arcgis/rest/services/wrl_services/wrl_polbnd_l_int_1m_unhcr/FeatureServer/0")
;		

		borderLayer.setRenderer(renderer);
		borderLayer.setMinScale(20000000);		
		
		
		var lang = jQuery('#language').text();
				
		var countryNameLayer = new esri.layers.ArcGISDynamicMapServiceLayer("https://geoservice.unhcr.org/arcgis/rest/services/wrl_services/wrl_polbnd_l_int_1m_unhcr/MapServer");
		countryNameLayer.setVisibleLayers([1]);
		countryNameLayer.setMinScale(20000000);
		countryNameLayer.setImageFormat("png32");

		var labelSymbol = new TextSymbol().setColor(new esri.Color('#7F7F7F'));
	    labelSymbol.font.setSize('4pt');
	    labelSymbol.font.setFamily('arial');
		labelSymbol.font.setWeight(300); 
			  
		var labelClass = new esri.layers.LabelClass({
			labelExpression: 'UCASE([gis_name_fr])',
			symbol: labelSymbol
		});
		labelClass.labelPlacement = 'esriServerPolygonPlacementAlwaysHorizontal';
		var layerDrawingOption = new esri.layers.LayerDrawingOptions({
			  labelingInfo: [labelClass],
			  showLabels: true
		});
		//layerDrawingOption.renderer  = renderer2;
		var layerDrawingOptionsArr = [];
		layerDrawingOptionsArr[1] = layerDrawingOption;

		if (lang == "fr") countryNameLayer.setLayerDrawingOptions(layerDrawingOptionsArr);


		


		var labelField = (lang == "fr") ? "name_fr" : "name";		   	
		// create a text symbol to define the style of labels
        var officeLabel = new TextSymbol();
        officeLabel.font.setSize("8pt");
        officeLabel.font.setFamily("arial");
		officeLabel.font.setWeight("bold");
        var officeLabelRenderer = new SimpleRenderer(officeLabel);
        var officeLabels = new LabelLayer({ id: "labels" });
        // tell the label layer to label the states feature layer 
        // using the field named "STATE_NAME"
        officeLabels.addFeatureLayer(unhcrLayer, officeLabelRenderer, "{" + labelField + "}");
		
		officeLabels.setMinScale(40000000);

		
    locationMap.on("layers-add-result", function (evt) {
          var legendDijit = new Legend({
            map: locationMap,
            layerInfos: [ { layer: unhcrLayer, title: 'Offices' }, { layer: pocLayer, title: 'Camps' } ]
          }, "location-legend");
          legendDijit.startup();
      });
    locationMap.on("load", function(evt) {
            locationMap.disableScrollWheelZoom();
            locationMap.disableRubberBandZoom();
        });

	
    locationMap.addLayers([reliefLayer, borderLayer, countryNameLayer, pocLayer,  unhcrLayer, officeLabels]); //labels,, countryLayer

}

/**
 * Load the general information about the currently selected operation and year
 */
function load_operation_overview() {
    if (gTabLoaded[0]) {
		activate_narrative_tab();
	} else {
        var opId = jQuery("#select-operation").val();
        if (opId>0) {
            jQuery('#overview-target').html("<div class='ajax-loader'>loading ...</div>");
            var params = new Object();
            params.operation_id = opId;
            params.planning_year = jQuery("#select-year li.active").text();
			params.narrat = jQuery('#pdf-reporting-exercise').text(); // propagate param for pdf
			params.lang = jQuery('#language').text();
            jQuery.ajax({
                url: '/focuscache/get-operation-overview-ajax',
                type: 'POST',
                data: params,
                success: function(res) {
                    var resObj = JSON.parse(res);
                    if (resObj.success) {
                        var ovwCode = resObj.overview_html;
                        if (ovwCode!='') {
                            jQuery('#overview-target').html(ovwCode);
                            // show budget chart
                           //// show_opbudgexp_chart();
							//Show budget expenditure trend chart
							show_subregion_budget_expenditure_trend_chart();
                            // show types of population chart
                            show_poptypes_chart();
                            jQuery('.last-update a').tooltip({ html: true });
                            // marks tab as loaded
                            gTabLoaded[0] = true;
							activate_narrative_tab();
                        }
                    }
                    else {
                        console.log("failed to load overview for operation #"+opId);
                    }
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    jQuery(".ajax-loader").hide();
                    console.log("failed to load overview for operation #"+opId+": "+errorThrown);
                }
            });
        }
    }
}


function activate_narrative_tab() {

	var selected_type = jQuery("input:radio[name=rb-narrat-type]:checked");
	var nt = selected_type.val();
	
	var showDetail = Boolean(jQuery("#det-narrat-visible-" + nt).text());
	
	if(!showDetail) {
		// force selection of overview
		jQuery("a[href='#tabs-operations-0']").tab('show');
		gTabId = 0; 
	}
	
	var tabToShow = "#tabs-" + nt + "-" + gTabId;
	jQuery("a[href$='"+tabToShow+"']").tab('show'); // href$ is important for pdf generation as it is prefixed with print/nodeid

	jQuery(".narrat-detail").toggle(showDetail); //toggle detail tabs
	

}

/**
 * Load the operational narratives for the current context
 */
function load_operational_context() {
    if ((gTabId>0) && (!gTabLoaded[gTabId])) {
        var tabId = "#tabs-operations-"+gTabId,
            opId = jQuery("#select-operation").val();
        if (opId>0) {
            // load operational context
            jQuery(tabId).html("<div class='ajax-loader'>loading ...</div>");
            var params = new Object();
            params.operation_id = opId;
            params.context_id = gTabId;
            params.planning_year = jQuery("#select-year li.active").text();
            jQuery.ajax({
                url: '/focuscache/get-operational-context-ajax',
                type: 'POST',
                data: params,
                success: function(res) {
                    jQuery(".ajax-loader").hide();
                    var resObj = JSON.parse(res);
                    if (resObj.success) {
                        var ctxCode = resObj.narratives_tree_html;
                        if (ctxCode!='') {
                            jQuery(tabId).html(ctxCode);
                            jQuery("#operation-narratives-accordion-"+gTabId).accordion({ 
                                    header:"h3",
                                    heightStyle: "content",
                                    autoHeight: true,
                                    collapsible: true,
                                    active: false
                                });
                            // marks tab as loaded
                            gTabLoaded[gTabId] = true;
							activate_narrative_tab();
                        }
                    }
                    else {
                        console.log("failed to load operational context narratives (tab"+gTabId+") for operation #"+opId);
                    }
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    jQuery(".ajax-loader").hide();
                    console.log("failed to load operational context narratives (tab"+gTabId+") for operation #"+opId+": "+errorThrown);
                }
            });
        }
    } else {
		activate_narrative_tab();
	}

}

/**
 * Refreshes the operational information for a the current context
 */
function refresh_context() {
    if (gTabId>0) {
        load_operational_context();
    }
    else {
        load_operation_overview();
    }
}

/**
 * Handler for change year event
 * @param obj event object
 */
function year_changed(obj) {
    var year = parseInt(obj.text());
    if (year>0) {
        var opNew = jQuery('#operation-new').text();
/* /// must reload page for year change after new layout
		if (opNew=="false") { */
            jQuery("#select-year li").removeClass("active");
            obj.addClass("active");
            jQuery("#select-year li").off("click");
            jQuery("#select-year li:not(.active)").click(function() { year_changed(jQuery(this)); });
/*            gTabLoaded = [false, false, false, false];
            refresh_context();
        }
        else { */
            var opId = jQuery("#select-operation").val();
            location.href = "/node/"+opId+"?y="+year+"#year";
      //  }
    }
}
/**
 * Get _REQUEST  variable
 */
function getUrlParameter(sParam)
{
    var sPageURL = window.location.search.substring(1);
    var sURLVariables = sPageURL.split('&');
    for (var i = 0; i < sURLVariables.length; i++) 
    {
        var sParameterName = sURLVariables[i].split('=');
        if (sParameterName[0] == sParam) 
        {
            return sParameterName[1];
        }
    }
}   

/**
 * Initializes the operation details page
 */
function init_operation() {
    jQuery("#select-operation").change(function() {
            var opId = parseInt(this.value);
            if (opId>0) {
                location.href = "/node/"+opId;
            }
        });
		var lng = getUrlParameter('lng'); // turn off readmore for PDF
		if (!lng) {
		jQuery(".operation-staffing-figures-content").readmore({
 			 	speed: 75,
  				collapsedHeight: 600
				});
		jQuery(".operation-highlights").readmore({
 			 	speed: 75,
  				collapsedHeight: 600,
				heightMargin: 32
				});
		jQuery(".operation-related-links-list").readmore({
				collapsedHeight: 90,
				moreLink: '<a href="#">View more</a>'
				});
		jQuery('#tabs-operations-0 .nav-tabs a').on('shown.bs.tab', function(event){
			jQuery(".operation-main-narrat").readmore({
 			 	speed: 75,
  				collapsedHeight: 300
				});
			});				

		} else {
			var currentDate = new Date()
			var day = currentDate.getDate()
			var month = currentDate.getMonth() + 1
			var year = currentDate.getFullYear()
			var showyear = jQuery('#select-year li.active').text()
			var reportingExercise= jQuery('#reporting-exercise').text()
			var titles = []
			if (reportingExercise=="YE") {
				titles["eng"] = "" + showyear + "&nbsp;Year-End&nbsp;report"
				titles["fr"] = "Rapport&nbsp;de&nbsp;fin&nbsp;d&#39;ann&#233;e&nbsp;" + showyear
			} else {
				titles["eng"] = "" + showyear + "&nbsp;Planning&nbsp;summary"
				titles["fr"] = "R&#233;sum&#233; du plan&nbsp;" + showyear
			}
			
			var title = titles[lng]
			var downloaded = (lng == "eng") ? 'Downloaded on ' : 'G&#233;n&#233;r&#233; le '
			
			jQuery(".print-site_name").html('<span style="font-size:25px;color: #0072BC;">'+title+'</span><br />'+ day+'/'+month+'/'+year);
			jQuery("div.print-logo").after('<span id="pdf-name">' + jQuery("#pdf-name-"+lng).html() + '</span>');
		}
    jQuery("#select-year li:not(.active)").click(function() { year_changed(jQuery(this)); });
    jQuery('a.narrat-tab').on('shown.bs.tab', function (e) { 
                    gTabId = jQuery(this).data('tabid');
                    refresh_context();
                });
    jQuery("a.export-to-pdf").click(function() {
            var nid = jQuery(this).data('nid');
			var year = jQuery(this).data('year');
			var lng = jQuery(this).data('lng');
			var narrat = jQuery(this).data('narrat');
            var loader = new ajaxLoader(jQuery('#node-'+nid));
            var params = new Object();
            params.operation_id = nid;
			params.year = year;
			params.lng = lng;
			params.narrat = narrat;
            jQuery.ajax({
                url: '/focuscache/export-to-pdf-ajax',
                type: 'POST',
                data: params,
                success: function(res) {
                    loader.remove();
                    var resObj = JSON.parse(res);
                    if (resObj.success) {
						// track clicks on pdf link in Google Analytics
						ga('send', 'event', {
							eventCategory: 'Downloads',
							eventAction: 'operation PDF',
							eventLabel: resObj.download_url
							});				
                        // redirects to the download page
                        window.open(resObj.download_url);
                    }
                    else {
                        console.log("failed to generate PDF for operation #"+nid);
                    }
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    loader.remove();
                    console.log("failed to generate PDF for operation #"+nid+": "+errorThrown);
                }
            });
        });
	jQuery("input:radio[name=rb-narrat-type]").change(function () {
		activate_narrative_tab();
		}
	);

				
    // refresh operational context
    refresh_context();
}

jQuery(document).ready(function(){
	init_operation();
	jQuery('.opptab-subregion').click(function(e) {
			jQuery(e.target).next('ul').slideToggle('fast', function() {
			jQuery(e.target).toggleClass('open', jQuery(e.target).next('ul').is(':visible'));
			});
			
		});
});